@model IEnumerable<TFA.Models.ImageModels>

@{
    ViewBag.Title = "Change Image Password";
}

@using (Html.BeginForm("ChangeImagePassword", "Account", FormMethod.Post, new { @class = "form-horizontal small-panel col-sm-offset-3 col-md-offset-4 col-sm-6 col-md-4", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Change your graphical sequencing password</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        @foreach (var item in Model)
        {
            var cbid = "cb_" + @item.Id;

            <div id="div_@item.Id" class="col-md-4 no-padding checkbox">
                <label class="no-padding" style="padding: 0; margin: 0;">
                    <input hidden type="checkbox" name="img" id="@cbid" value="@cbid" onchange="imageClick('cb_' + @item.Id, 'div_' + @item.Id);" />
                    <img src="http://@item.Path" class="max-hw" />
                </label>
            </div>
        }
    </div>
    <input type="text" id="txtSerialHash" name="serialHash" value="" hidden />

    <br />
    <span class="glyphicon glyphicon-info-sign"></span><text>  Pick at least <b>4 images</b> for your password</text>
    <br />
    <span class="glyphicon glyphicon-info-sign"></span><text>  Take note the <b>order</b> of the images you selected as it is relevant in the process of login</text>

    <div class="form-group margin-top-24">
        <div class="col-xs-12">
            <input type="submit" class="btn btn-success" value="Change image password" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function imageClick(cbid, divid) {

            console.log('CBID: [ ' + cbid + ' ]');

            let isChecked = document.getElementById(cbid).checked;
            console.log('isChecked: [ ' + isChecked + ' ]');

            if (isChecked) {
                document.getElementById(divid).style.pointerEvents = "none";
                console.log('pointerEvents: [ ' + document.getElementById(divid).style.pointerEvents + ' ]');
                document.getElementById(divid).style.opacity = 0.4;
                console.log('opacity: [ ' + document.getElementById(divid).style.opacity + ' ]');

                let normalizedCbid = cbid.replace('cb_', '');
                console.log('normalizedCbid: [ ' + normalizedCbid + ' ]');

                serialize(normalizedCbid, 'add');
            }
        }

        var serial = [];
        function serialize(cbid, method) {
            if (method == 'add') {
                serial.push(cbid);
                console.log('serial: [ ' + String(serial) + ' ]');

                serializeAll();
            } else if (method == 'remove') {

            }
        }

        function serializeAll() {
            let serialCode = '';
            for (let item of serial) {
                serialCode = serialCode.concat(item);
            }
            console.log('serialCode: [ ' + serialCode + ' ]');

            document.getElementById('txtSerialHash').value = null;
            document.getElementById('txtSerialHash').value = serialCode;
            console.log('txtSerialHash: [ ' + document.getElementById('txtSerialHash').value + ' ]');
        }
    </script>
}